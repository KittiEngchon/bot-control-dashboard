async function updateTokens(index, address) {
  const tokenList = [
    {
      symbol: "USDC",
      address: "0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174",
      decimals: 6,
    },
    {
      symbol: "MATIC",
      address: "0x0000000000000000000000000000000000001010", // ใช้ Native MATIC proxy บน Polygon
      decimals: 18,
      isNative: true,
    },
    {
      symbol: "DAI",
      address: "0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063",
      decimals: 18,
    }
  ];

  try {
    const results = [];

    for (const token of tokenList) {
      if (token.isNative) {
        const balance = await provider.getBalance(address);
        results.push(`${token.symbol}: ${parseFloat(ethers.utils.formatUnits(balance, token.decimals)).toFixed(2)}`);
      } else {
        const abi = ["function balanceOf(address) view returns (uint256)"];
        const tokenContract = new ethers.Contract(token.address, abi, provider);
        const balance = await tokenContract.balanceOf(address);
        results.push(`${token.symbol}: ${parseFloat(ethers.utils.formatUnits(balance, token.decimals)).toFixed(2)}`);
      }
    }

    document.getElementById(`tokens-${index}`).innerText = results.join(", ");
  } catch (err) {
    console.error("Token fetch error:", err);
    document.getElementById(`tokens-${index}`).innerText = "Error";
  }
}
