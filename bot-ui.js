// bot-ui.js

const bots = [
  { name: "Market Maker", alias: "MM-1", wallet: "0xAbc1...1234", role: "‡∏ó‡∏≥‡∏£‡∏≤‡∏Ñ‡∏≤‡πÉ‡∏ô‡∏ï‡∏•‡∏≤‡∏î", balance: 12000, pnl: 4.3, status: false },
  { name: "Arbitrage Bot", alias: "Arbi-Bot", wallet: "0xAbc2...2345", role: "‡∏´‡∏≤‡∏Å‡∏≥‡πÑ‡∏£‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πà‡∏≤‡∏á DEX", balance: 9800, pnl: 2.1, status: false },
  { name: "Impact Bot", alias: "Impacky", wallet: "0xAbc3...3456", role: "‡∏ó‡∏≥‡∏£‡∏≤‡∏Ñ‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡∏Å‡∏•‡πÑ‡∏Å‡∏ï‡∏•‡∏≤‡∏î", balance: 10320, pnl: -1.7, status: false },
  { name: "Rebalancer", alias: "Balancer", wallet: "0xAbc4...4567", role: "‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô Liquidity Pool", balance: 8700, pnl: 0.0, status: false },
  { name: "Auto Swapper", alias: "Auto-SW", wallet: "0xAbc5...5678", role: "‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥", balance: 11200, pnl: 3.5, status: false },
  { name: "Multi-Arb", alias: "M-Arb", wallet: "0xAbc6...6789", role: "‡πÑ‡∏•‡πà Arbitrage ‡∏Ç‡πâ‡∏≤‡∏°‡∏´‡∏•‡∏≤‡∏¢ Chain", balance: 9450, pnl: 1.2, status: false },
  { name: "Portfolio Adjust", alias: "Adjuster", wallet: "0xAbc7...7890", role: "‡∏õ‡∏£‡∏±‡∏ö‡∏û‡∏≠‡∏£‡πå‡∏ï‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥", balance: 9990, pnl: -0.8, status: false },
  { name: "Volume Simulator", alias: "SimuBot", wallet: "0xAbc8...8901", role: "‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢", balance: 8800, pnl: 2.9, status: false },
  { name: "Buy Wall Bot", alias: "WallBuy", wallet: "0xAbc9...9012", role: "‡∏ï‡∏±‡πâ‡∏á Buy wall ‡∏´‡∏•‡∏≠‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤", balance: 7600, pnl: -2.3, status: false },
  { name: "Sell Wall Bot", alias: "WallSell", wallet: "0xAbcA...0123", role: "‡∏ï‡∏±‡πâ‡∏á Sell wall ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏£‡∏≤‡∏Ñ‡∏≤", balance: 7400, pnl: -3.1, status: false },
  { name: "Trend Rider", alias: "TrendR", wallet: "0xAbcB...9999", role: "‡∏ß‡∏¥‡πà‡∏á‡∏ï‡∏≤‡∏°‡πÄ‡∏ó‡∏£‡∏ô‡∏î‡πå‡∏£‡∏≤‡∏Ñ‡∏≤", balance: 10450, pnl: 5.7, status: false },
];

const grid = document.getElementById("bot-grid");

grid.innerHTML = "";

bots.forEach((bot, index) => {
  const card = document.createElement("div");
  card.className = "bg-gray-800 rounded-2xl p-4 shadow-md space-y-3";

  const pnlColor = bot.pnl >= 0 ? 'text-green-400' : 'text-red-400';
  const statusText = bot.status ? 'üü¢ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà' : '‚ö™ ‡∏´‡∏¢‡∏∏‡∏î‡∏≠‡∏¢‡∏π‡πà';
  const statusColor = bot.status ? 'text-green-400' : 'text-gray-400';

  card.innerHTML = `
    <div class="flex items-center space-x-4">
      <img src="assets/bot${index + 1}.png" alt="Bot Avatar" class="w-12 h-12 rounded-full bg-white" />
      <div>
        <input type="text" value="${bot.alias}" class="text-xl font-semibold bg-transparent border-b border-gray-600 focus:outline-none w-full" />
        <p class="text-sm text-gray-400">${bot.role}</p>
      </div>
    </div>
    <p class="text-sm text-gray-300">‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤: <span class="font-mono">${bot.wallet}</span></p>
    <p class="text-sm text-gray-300">‡∏ñ‡∏∑‡∏≠‡∏Ñ‡∏£‡∏≠‡∏á: ${bot.balance.toLocaleString()} USDC</p>
    <p class="text-sm ${pnlColor}">‡∏Å‡∏≥‡πÑ‡∏£/‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô: ${bot.pnl > 0 ? '+' : ''}${bot.pnl.toFixed(1)}%</p>
    <p class="text-sm ${statusColor}">${statusText}</p>
    <div class="flex items-center space-x-2">
      <button class="bg-green-500 hover:bg-green-400 px-4 py-1 rounded" onclick="toggleBot(${index}, true)">‡πÄ‡∏£‡∏¥‡πà‡∏°</button>
      <button class="bg-red-500 hover:bg-red-400 px-4 py-1 rounded" onclick="toggleBot(${index}, false)">‡∏´‡∏¢‡∏∏‡∏î</button>
      <button class="bg-blue-600 hover:bg-blue-500 px-3 py-1 rounded">Connect Wallet</button>
    </div>
  `;

  grid.appendChild(card);
});

function toggleBot(index, run) {
  bots[index].status = run;
  renderBots();
}

function renderBots() {
  grid.innerHTML = "";
  bots.forEach((_, i) => bots[i].alias = document.querySelectorAll('input')[i].value);
  bots.forEach((bot, index) => {
    const card = document.createElement("div");
    card.className = "bg-gray-800 rounded-2xl p-4 shadow-md space-y-3";

    const pnlColor = bot.pnl >= 0 ? 'text-green-400' : 'text-red-400';
    const statusText = bot.status ? 'üü¢ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà' : '‚ö™ ‡∏´‡∏¢‡∏∏‡∏î‡∏≠‡∏¢‡∏π‡πà';
    const statusColor = bot.status ? 'text-green-400' : 'text-gray-400';

    card.innerHTML = `
      <div class="flex items-center space-x-4">
        <img src="assets/bot${index + 1}.png" alt="Bot Avatar" class="w-12 h-12 rounded-full bg-white" />
        <div>
          <input type="text" value="${bot.alias}" class="text-xl font-semibold bg-transparent border-b border-gray-600 focus:outline-none w-full" />
          <p class="text-sm text-gray-400">${bot.role}</p>
        </div>
      </div>
      <p class="text-sm text-gray-300">‡∏Å‡∏£‡∏∞‡πÄ‡∏õ‡πã‡∏≤: <span class="font-mono">${bot.wallet}</span></p>
      <p class="text-sm text-gray-300">‡∏ñ‡∏∑‡∏≠‡∏Ñ‡∏£‡∏≠‡∏á: ${bot.balance.toLocaleString()} USDC</p>
      <p class="text-sm ${pnlColor}">‡∏Å‡∏≥‡πÑ‡∏£/‡∏Ç‡∏≤‡∏î‡∏ó‡∏∏‡∏ô: ${bot.pnl > 0 ? '+' : ''}${bot.pnl.toFixed(1)}%</p>
      <p class="text-sm ${statusColor}">${statusText}</p>
      <div class="flex items-center space-x-2">
        <button class="bg-green-500 hover:bg-green-400 px-4 py-1 rounded" onclick="toggleBot(${index}, true)">‡πÄ‡∏£‡∏¥‡πà‡∏°</button>
        <button class="bg-red-500 hover:bg-red-400 px-4 py-1 rounded" onclick="toggleBot(${index}, false)">‡∏´‡∏¢‡∏∏‡∏î</button>
        <button class="bg-blue-600 hover:bg-blue-500 px-3 py-1 rounded">Connect Wallet</button>
      </div>
    `;

    grid.appendChild(card);
  });
}
